@inject SweetAlertService sweetAlertService;
@inject NavigationManager navigation;
@inject ProveedorServ.ProveedorServClient proveedorService;

@page "/proveedor"

@if (lista.Lista.Count() > 0)
{
    <div class="mb-3">
        <button @onclick="agregarProveedor" type="button" class="btn btn-primary">Agregar Proveedor</button>
        <button @onclick="regresar" type="button" class="btn btn-primary">Regresar</button>
    </div>

    <table class="table table-striped table-bordered">
        <thead class="table-dark">
            <tr>
                <th scope="col">#</th>
                <th align="center" scope="col">Nombre</th>
                <th align="center" scope="col">Tipo de material</th>
                <th align="center" scope="col">Direccion</th>
                <th align="center" scope="col">Telefono</th>
                <th align="center" scope="col">Correo</th>
                <th align="center" scope="col">Opciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in lista.Lista)
            {
                <tr>
                    <th scope="row">@item.ProveedorId</th>
                    <td align="center">@item.Nombre</td>
                    <td align="center">@item.TipoMaterial</td>
                    <td align="center">@item.Direccion</td>
                    <td align="center">@item.Telefono</td>
                    <td align="center">@item.CorreoElectronico</td>
                    <td align="center">
                        <button @onclick="@(() => modificarProveedor(item.ProveedorId))" type="button" class="btn btn-success">Modificar</button>
                        <button @onclick="@(() => eliminarProveedor(item.ProveedorId))" type="button" class="btn btn-danger">Eliminar</button>
                    </td>
                </tr>

            }
        </tbody>
    </table>
}
else
{
    <div class="mb-3">
        <button @onclick="agregarProveedor" type="button" class="btn btn-primary">Agregar Proveedor</button>
    </div>

    <table class="table table-striped table-bordered">
        <thead class="table-dark">
            <tr>
                <th scope="col">#</th>
                <th scope="col"></th>
                <th scope="col"></th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td align="center" colspan="4">No se encontraron proveedores</td>
            </tr>
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        </tbody>
    </table>
}
@code {
    ProveedoresReply lista = new ProveedoresReply();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var r = await proveedorService.getProveedoresAsync(new EmptyProveedorRequest());

            if (r!.Resultado)
            {
                lista.Lista.AddRange(r.Lista);
            }
        }
        catch (Exception)
        {

        }
    }

    private void agregarProveedor()
    {
        var url = $"/agregarProveedor";

        navigation.NavigateTo(url);
    }

    private void regresar()
    {
        navigation.NavigateTo("/");
    }

    private void modificarProveedor(int proveedorId)
    {
        var url = $"/modificarProveedor/{proveedorId}";

        navigation.NavigateTo(url);
    }

    private async Task eliminarProveedor(int proveedorId)
    {
        var re = await proveedorService.deleteProveedorAsync( new ProveedorRequest()
            {
                ProveedorId = proveedorId
            });

        Console.WriteLine(re.Message);

        if (re!.Resultado)
        {
            await sweetAlertService.FireAsync(new SweetAlertOptions()
                {
                    Title = "¡Eliminado!",
                    Text = "El proveedor se elimino con exito! :)",
                    Icon = "success",
                    ConfirmButtonText = "Aceptar"
                });

            navigation.NavigateTo("/proveedor", true);
        }
        else
        {
            await sweetAlertService.FireAsync(new SweetAlertOptions()
                {
                    Title = "Ups...",
                    Text = "Ocurrio un error, no pudimos eliminar el proveedor! :(",
                    Icon = "error",
                    ConfirmButtonText = "Aceptar"
                });
        }
    }

}

